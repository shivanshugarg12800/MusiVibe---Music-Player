{"version":3,"sources":["components/Song.js","components/Player.js","components/LibrarySong.js","components/Library.js","components/Nav.js","data.js","components/Bubble.js","App.js","reportWebVitals.js","index.js"],"names":["Song","currentSong","className","alt","name","src","cover","artist","Player","audioRef","setCurrentSong","isPlaying","setIsPlaying","songInfo","songs","setSongs","setSongInfo","activeLibraryHandler","nextPrev","newSong","map","song","id","active","formatTime","seconds","minutes","Math","floor","skipTrackHandler","direction","a","currentIndex","findIndex","n","length","current","play","trackAnimation","transform","animationPercentage","currentTime","style","background","color","min","max","duration","value","onChange","e","target","type","onClick","size","icon","faAngleLeft","pause","faPause","faPlay","faAngleRight","LibrarySong","songChangeHandler","Library","libraryStatus","Nav","setLibraryStatus","faMusic","chillHop","audio","uuidv4","Bubble","App","useRef","useState","data","timeHandler","roundedTime","round","roundedDuration","songEndHandler","onLoadedMetadata","onTimeUpdate","ref","onEnded","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ebff29e9.chunk.js","sourcesContent":["// this is the component which contains the current playing song's information like name cover image\r\n// author\r\nimport React from \"react\";\r\n// getting the current playing song\r\nconst Song = ({ currentSong }) => {\r\n  return (\r\n    <div className=\"song-container\">\r\n      <img alt={currentSong.name} src={currentSong.cover} />\r\n      <h2>{currentSong.name}</h2>\r\n      <h3>{currentSong.artist}</h3>\r\n    </div>\r\n  );\r\n};\r\nexport default Song;\r\n","/*\r\nThis file renders the player which is used to play/pause skip the current playing song\r\n1. using the font awesome icons\r\n2. using the current song to get the details of the current song playing\r\n3. using the useRef hook to make changes to the html tag which we could have otherwise called in via \r\n   docuement model in plain javascript\r\n4. \r\n*/\r\n\r\nimport React from \"react\";\r\n// useRef is used to grab the html elements by adding a reference to that\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faPlay,\r\n  faAngleRight,\r\n  faAngleLeft,\r\n  faPause,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nconst Player = ({\r\n  audioRef,\r\n  currentSong,\r\n  setCurrentSong,\r\n  isPlaying,\r\n  setIsPlaying,\r\n  songInfo,\r\n  songs,\r\n  setSongs,\r\n  setSongInfo,\r\n}) => {\r\n  // this function checks if the song is loaded in the dom or not and if not it waits for it to load\r\n  const activeLibraryHandler = (nextPrev) => {\r\n    const newSong = songs.map((song) => {\r\n      if (song.id === nextPrev.id) {\r\n        return {\r\n          ...song,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...song,\r\n          active: false,\r\n        };\r\n      }\r\n    });\r\n    setSongs(newSong);\r\n  };\r\n  //--------------------- Event handlers-------------------------\r\n  const songPlayHandler = () => {\r\n    if (isPlaying) {\r\n      audioRef.current.pause();\r\n      setIsPlaying(!isPlaying);\r\n    } else {\r\n      audioRef.current.play();\r\n      setIsPlaying(!isPlaying);\r\n    }\r\n  };\r\n  // function to format the time of audio tag\r\n  const formatTime = (seconds) => {\r\n    let minutes = Math.floor(seconds / 60);\r\n    minutes = minutes >= 10 ? minutes : \"0\" + minutes;\r\n    seconds = Math.floor(seconds % 60);\r\n    seconds = seconds >= 10 ? seconds : \"0\" + seconds;\r\n    return minutes + \":\" + seconds;\r\n  };\r\n  // this function if for the drag event of the input\r\n  const dragHandler = (e) => {\r\n    audioRef.current.currentTime = e.target.value;\r\n    // load the previous songsInfo and then set the currentTime\r\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\r\n  };\r\n  // this is the function to check the forward and the back button in the player\r\n  const skipTrackHandler = async (direction) => {\r\n    const currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n    let n = songs.length;\r\n    if (direction === \"back\") {\r\n      await setCurrentSong(\r\n        currentIndex === 0 ? songs[n - 1] : songs[currentIndex - 1]\r\n      );\r\n      activeLibraryHandler(\r\n        currentIndex === 0 ? songs[n - 1] : songs[currentIndex - 1]\r\n      );\r\n    } else {\r\n      await setCurrentSong(\r\n        currentIndex === n - 1 ? songs[0] : songs[currentIndex + 1]\r\n      );\r\n      activeLibraryHandler(\r\n        currentIndex === n - 1 ? songs[0] : songs[currentIndex + 1]\r\n      );\r\n    }\r\n    if (isPlaying) audioRef.current.play();\r\n  };\r\n\r\n  const trackAnimation = {\r\n    transform: `translateX(${songInfo.animationPercentage}%)`,\r\n  };\r\n\r\n  return (\r\n    <div className=\"player\">\r\n      <div className=\"time-control\">\r\n        <p>{formatTime(songInfo.currentTime)}</p>\r\n        <div\r\n          style={{\r\n            background: `linear-gradient( to right, ${currentSong.color[0]},${currentSong.color[1]})`,\r\n          }}\r\n          className=\"track\"\r\n        >\r\n          <input\r\n            min={0}\r\n            max={songInfo.duration || 0}\r\n            value={songInfo.currentTime}\r\n            onChange={dragHandler}\r\n            type=\"range\"\r\n          />\r\n          <div style={trackAnimation} className=\"track-animation\"></div>\r\n        </div>\r\n        <p>{songInfo.duration ? formatTime(songInfo.duration) : \"0:00\"}</p>\r\n      </div>\r\n      <div className=\"play-control\">\r\n        {/* icon is a prop that is passed on to the component FontAwesomeIcon */}\r\n        <FontAwesomeIcon\r\n          onClick={() => skipTrackHandler(\"back\")}\r\n          className=\"skip-back font-icons\"\r\n          size=\"2x\"\r\n          icon={faAngleLeft}\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={songPlayHandler}\r\n          className=\"play font-icons\"\r\n          size=\"2x\"\r\n          icon={isPlaying ? faPause : faPlay}\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={() => skipTrackHandler(\"forward\")}\r\n          className=\"skip-forward font-icons\"\r\n          size=\"2x\"\r\n          icon={faAngleRight}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Player;\r\n","import React from \"react\";\r\nconst LibrarySong = ({\r\n  audioRef,\r\n  song,\r\n  songs,\r\n  setCurrentSong,\r\n  isPlaying,\r\n  id,\r\n  setSongs,\r\n}) => {\r\n  // Event Handlers-------------------------\r\n  const songChangeHandler = async () => {\r\n    // const selectedSong = songs.filter((state) => state.id === id);\r\n    // console.log(e.target);\r\n    await setCurrentSong(song);\r\n    // change the active state of the song\r\n    const newSong = songs.map((song) => {\r\n      if (song.id === id) {\r\n        return {\r\n          ...song,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...song,\r\n          active: false,\r\n        };\r\n      }\r\n    });\r\n    setSongs(newSong);\r\n    //check if the song is playing or not\r\n    //if not then it waits till the song loads and it plays\r\n    if (isPlaying) audioRef.current.play();\r\n  };\r\n\r\n  return (\r\n    <div\r\n      onClick={songChangeHandler}\r\n      className={`library-song ${song.active ? \"selected\" : \"\"}`}\r\n    >\r\n      <img alt={song.name} src={song.cover} />\r\n      <div className=\"song-description\">\r\n        <h3>{song.name}</h3>\r\n        <h4>{song.artist}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default LibrarySong;\r\n","// this component renders all the songs present in the util.js\r\n\r\nimport React from \"react\";\r\nimport LibrarySong from \"./LibrarySong\";\r\n\r\nconst Library = ({\r\n  audioRef,\r\n  songs,\r\n  setCurrentSong,\r\n  isPlaying,\r\n  setSongs,\r\n  libraryStatus,\r\n}) => {\r\n  return (\r\n    <div className={`library ${libraryStatus ? `library-status` : \"\"}`}>\r\n      <h2>Library</h2>\r\n      <div className=\"library-songs\">\r\n        {songs.map((song) => (\r\n          <LibrarySong\r\n            isPlaying={isPlaying}\r\n            audioRef={audioRef}\r\n            songs={songs}\r\n            setCurrentSong={setCurrentSong}\r\n            song={song}\r\n            id={song.id}\r\n            key={song.id}\r\n            setSongs={setSongs}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Library;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMusic } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nav = ({ libraryStatus, setLibraryStatus }) => {\r\n  return (\r\n    <div>\r\n      <nav>\r\n        <h1>MusiVibe</h1>\r\n        <button\r\n          onClick={() => {\r\n            setLibraryStatus(!libraryStatus);\r\n          }}\r\n        >\r\n          Library\r\n          <FontAwesomeIcon icon={faMusic} />\r\n        </button>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\nexport default Nav;\r\n","import { v4 as uuidv4 } from \"uuid\";\r\nfunction chillHop() {\r\n  return [\r\n    {\r\n      name: \"Beaver Creek\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n      artist: \"Aso, Middle School, Aviino\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10075\",\r\n      color: [\"#205950\", \"#2ab3bf\"],\r\n      id: uuidv4(),\r\n      active: true,\r\n    },\r\n    {\r\n      name: \"Daylight\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n      artist: \"Aiguille\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9272\",\r\n      color: [\"#EF8EA9\", \"#ab417f\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Keep Going\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n      artist: \"Swørn\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\",\r\n      color: [\"#CD607D\", \"#c94043\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Nightfall\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n      artist: \"Aiguille\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9148\",\r\n      color: [\"#EF8EA9\", \"#ab417f\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Reflection\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n      artist: \"Swørn\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9228\",\r\n      color: [\"#CD607D\", \"#c94043\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Under the City Stars\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n      artist: \"Aso, Middle School, Aviino\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\r\n      color: [\"#205950\", \"#2ab3bf\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    //ADD MORE HERE\r\n  ];\r\n}\r\n\r\nexport default chillHop;\r\n","import React from \"react\";\r\nconst Bubble = ({ isPlaying }) => {\r\n  return (\r\n    <div>\r\n      <div className={`bubbles ${isPlaying ? `showBubble` : \"hideBubble\"}`}>\r\n        <div className=\"bubble\"></div>\r\n        <div className=\"bubble\"></div>\r\n        <div className=\"bubble\"></div>\r\n        <div className=\"bubble\"></div>\r\n        <div className=\"bubble\"></div>\r\n        <div className=\"bubble\"></div>\r\n        <div className=\"bubble\"></div>\r\n        <div className=\"bubble\"></div>\r\n        <div className=\"bubble\"></div>\r\n        <div className=\"bubble\"></div>\r\n        <div className=\"bubble\"></div>\r\n        <div className=\"bubble\"></div>\r\n        <div className=\"bubble\"></div>\r\n        <div className=\"bubble\"></div>\r\n        <div className=\"bubble\"></div>\r\n        <div className=\"bubble\"></div>\r\n        <div className=\"bubble\"></div>\r\n        <div className=\"bubble\"></div>\r\n        <div className=\"bubble\"></div>\r\n        <div className=\"bubble\"></div>\r\n        <div className=\"bubble\"></div>\r\n        <div className=\"bubble\"></div>\r\n        <div className=\"bubble\"></div>\r\n        <div className=\"bubble\"></div>\r\n        <div className=\"bubble\"></div>\r\n        <div className=\"bubble\"></div>\r\n        <div className=\"bubble\"></div>\r\n        <div className=\"bubble\"></div>\r\n        <div className=\"bubble\"></div>\r\n        <div className=\"bubble\"></div>\r\n        <div className=\"bubble\"></div>\r\n        <div className=\"bubble\"></div>\r\n        <div className=\"bubble\"></div>\r\n        <div className=\"bubble\"></div>\r\n        <div className=\"bubble\"></div>\r\n        <div className=\"bubble\"></div>\r\n        <div className=\"bubble\"></div>\r\n        <div className=\"bubble\"></div>\r\n        <div className=\"bubble\"></div>\r\n        <div className=\"bubble\"></div>\r\n        <div className=\"bubble\"></div>\r\n        <div className=\"bubble\"></div>\r\n        <div className=\"bubble\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Bubble;\r\n","import React, { useState, useRef } from \"react\";\n\n// import styles\nimport \"./styles/app.scss\";\n\n// import components\nimport Song from \"./components/Song\";\nimport Player from \"./components/Player\";\nimport Library from \"./components/Library\";\nimport Nav from \"./components/Nav\";\nimport data from \"./data\";\nimport Bubble from \"./components/Bubble\";\nfunction App() {\n  // ----------------------REFERENCES-------------------------\n  const audioRef = useRef(null);\n\n  // -------------------------STATES------------------------------\n  // since it returns an array of the objects we set the current song as the first object from the array\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n    animationPercentage: 0,\n  });\n  const [libraryStatus, setLibraryStatus] = useState(false);\n\n  //--------------------------- FUNCTIONS --------------------\n  const timeHandler = (e) => {\n    const currentTime = e.target.currentTime;\n    const duration = e.target.duration;\n    const roundedTime = Math.round(currentTime);\n    const roundedDuration = Math.round(duration);\n    const animationPercentage = Math.round(\n      (roundedTime / roundedDuration) * 100\n    );\n    setSongInfo({\n      ...songInfo,\n      currentTime,\n      duration,\n      animationPercentage,\n    });\n  };\n\n  const songEndHandler = async () => {\n    const currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    let n = songs.length;\n    await setCurrentSong(\n      currentIndex === n - 1 ? songs[0] : songs[currentIndex + 1]\n    );\n    if (isPlaying) audioRef.current.play();\n  };\n\n  return (\n    <div className={`App ${libraryStatus ? `library-active` : \"\"}`}>\n      <Bubble isPlaying={isPlaying} />\n      <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\n      <Song currentSong={currentSong} />\n      <Player\n        audioRef={audioRef}\n        setIsPlaying={setIsPlaying}\n        isPlaying={isPlaying}\n        currentSong={currentSong}\n        songInfo={songInfo}\n        setSongInfo={setSongInfo}\n        songs={songs}\n        setSongs={setSongs}\n        setCurrentSong={setCurrentSong}\n      />\n      <Library\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        audioRef={audioRef}\n        isPlaying={isPlaying}\n        setSongs={setSongs}\n        libraryStatus={libraryStatus}\n      />\n      <audio\n        onLoadedMetadata={timeHandler}\n        onTimeUpdate={timeHandler}\n        ref={audioRef}\n        src={currentSong.audio}\n        onEnded={songEndHandler}\n      ></audio>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}